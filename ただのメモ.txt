================================================================================
Sapi AI - 使用技術スタック
================================================================================
最終更新日: 2025年10月25日

================================================================================
1. プログラミング言語
================================================================================
  ✓ Python 3.13.5
    - メイン開発言語
    - 総コード行数: 13,898行

================================================================================
2. フレームワーク
================================================================================
  ✓ Streamlit 1.45.1 (要件: >=1.28.0)
    - Webアプリケーションフレームワーク
    - インタラクティブUIの構築
    - データダッシュボード

================================================================================
3. データベース・データストレージ
================================================================================
  【JSONファイルベース】
  ✓ goals.json              - 目標データ
  ✓ grades.json             - 成績データ
  ✓ subjects.json           - 科目データ
  ✓ notes.json              - ノートデータ
  ✓ reminders.json          - リマインダーデータ
  ✓ progress.json           - 進捗データ
  ✓ study_plans.json        - 学習計画データ
  ✓ report_settings.json    - レポート設定
  ✓ user_profile.json       - ユーザープロファイル
  ✓ grade_templates.json    - 成績テンプレート

  【RDBサポート (オプション)】
  ✓ SQLAlchemy 2.0.39 (要件: >=2.0.0)
    - ORM機能
    - 将来的なRDB対応

================================================================================
4. AI/機械学習ライブラリ
================================================================================
  【AI API】
  ✓ OpenAI 1.101.0 (要件: >=1.0.0)
    - GPT-5による自然言語処理
    - AI機能:
      • 成績評価・分析
      • 論文解説
      • 翻訳
      • 答案分析
      • YouTube動画クイズ生成
      • 学習計画作成
      • 学習レポート生成

  【機械学習】
  ✓ scikit-learn 1.6.1 (要件: >=1.7.0) ⚠️
    - 機械学習アルゴリズム
    - 成績予測モデル
    - データ分析と統計処理
    - 注: バージョン要件未満

  ✓ scikit-image 0.25.0
    - 画像処理ライブラリ

================================================================================
5. データ処理・分析ライブラリ
================================================================================
  ✓ Pandas 2.2.3 (要件: >=2.0.0)
    - データフレーム操作
    - CSV/JSONデータ処理
    - データ分析

  ✓ NumPy 2.1.3 (要件: >=1.24.0)
    - 数値計算
    - 配列操作
    - 科学計算

================================================================================
6. データ可視化ライブラリ
================================================================================
  ✓ Plotly 5.24.1 (要件: >=5.17.0)
    - インタラクティブなグラフ
    - 動的チャート
    - 3D可視化

  ✓ Matplotlib 3.10.0 (要件: >=3.7.0)
    - 静的グラフ生成
    - 統計プロット
    - カスタマイズ可能な図表

  ✓ matplotlib-inline 0.1.6
    - Jupyter/ノートブック統合

================================================================================
7. 外部API連携ライブラリ
================================================================================
  ✓ youtube-transcript-api 1.2.2 (要件: >=0.6.0)
    - YouTube動画字幕取得
    - 動画コンテンツ分析
    - クイズ生成用データソース

  ✓ audio-recorder-streamlit 0.0.10 (要件: >=0.0.8)
    - ブラウザベース音声録音
    - Streamlit音声入力統合

================================================================================
8. 設定・環境管理
================================================================================
  ✓ python-dotenv 1.1.0 (要件: >=1.0.0)
    - 環境変数管理
    - .envファイル読込
    - APIキー・シークレット管理

  【環境変数】
  • OPENAI_API_KEY - OpenAI API認証キー (必須)

================================================================================
9. テストフレームワーク
================================================================================
  ✓ pytest 8.3.4 (要件: >=7.4.0)
    - ユニットテスト
    - テストオートメーション
    - コード品質管理

================================================================================
10. プロジェクト構造
================================================================================
  【ディレクトリ】
  • __pycache__/  - Pythonキャッシュ
  • backups/      - データバックアップ
  • ml_models/    - 機械学習モデル保存
  • reports/      - 生成レポート

  【主要モジュール (例)】
  • app.py                    - メインアプリケーション
  • ai_*.py                   - AI機能群
  • dashboard.py              - ダッシュボード
  • data_management.py        - データ管理
  • grade_analytics.py        - 成績分析
  • ml_grade_prediction.py    - ML成績予測
  • backup_manager.py         - バックアップ管理
  • logger.py                 - ロギング
  • env_validator.py          - 環境検証

================================================================================
11. バージョン管理
================================================================================
  ✓ Git
    - リポジトリ: https://github.com/tomoki306/Sapi-AI.git
    - ブランチ: main

================================================================================
12. 開発環境
================================================================================
  • OS: macOS
  • シェル: zsh
  • パッケージ管理: pip3
  • 起動コマンド: streamlit run app.py

================================================================================
パッケージ一覧サマリー
================================================================================
コア:        streamlit, pandas, numpy
AI/ML:       openai, scikit-learn, scikit-image
可視化:      plotly, matplotlib
外部API:     youtube-transcript-api, audio-recorder-streamlit
設定:        python-dotenv
データベース: SQLAlchemy (オプション)
テスト:      pytest

総パッケージ数: 15+ (主要パッケージ)
総コード行数:   13,898行

================================================================================
